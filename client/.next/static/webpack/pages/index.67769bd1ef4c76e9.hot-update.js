"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/generated/graphql-types.ts":
/*!****************************************!*\
  !*** ./src/generated/graphql-types.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetAdDocument: function() { return /* binding */ GetAdDocument; },\n/* harmony export */   GetAllAdsDocument: function() { return /* binding */ GetAllAdsDocument; },\n/* harmony export */   GetAllCategoriesDocument: function() { return /* binding */ GetAllCategoriesDocument; },\n/* harmony export */   LoginDocument: function() { return /* binding */ LoginDocument; },\n/* harmony export */   PublishAdDocument: function() { return /* binding */ PublishAdDocument; },\n/* harmony export */   RegisterDocument: function() { return /* binding */ RegisterDocument; },\n/* harmony export */   useGetAdLazyQuery: function() { return /* binding */ useGetAdLazyQuery; },\n/* harmony export */   useGetAdQuery: function() { return /* binding */ useGetAdQuery; },\n/* harmony export */   useGetAdSuspenseQuery: function() { return /* binding */ useGetAdSuspenseQuery; },\n/* harmony export */   useGetAllAdsLazyQuery: function() { return /* binding */ useGetAllAdsLazyQuery; },\n/* harmony export */   useGetAllAdsQuery: function() { return /* binding */ useGetAllAdsQuery; },\n/* harmony export */   useGetAllAdsSuspenseQuery: function() { return /* binding */ useGetAllAdsSuspenseQuery; },\n/* harmony export */   useGetAllCategoriesLazyQuery: function() { return /* binding */ useGetAllCategoriesLazyQuery; },\n/* harmony export */   useGetAllCategoriesQuery: function() { return /* binding */ useGetAllCategoriesQuery; },\n/* harmony export */   useGetAllCategoriesSuspenseQuery: function() { return /* binding */ useGetAllCategoriesSuspenseQuery; },\n/* harmony export */   useLoginLazyQuery: function() { return /* binding */ useLoginLazyQuery; },\n/* harmony export */   useLoginQuery: function() { return /* binding */ useLoginQuery; },\n/* harmony export */   useLoginSuspenseQuery: function() { return /* binding */ useLoginSuspenseQuery; },\n/* harmony export */   usePublishAdMutation: function() { return /* binding */ usePublishAdMutation; },\n/* harmony export */   useRegisterMutation: function() { return /* binding */ useRegisterMutation; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    query GetAllAds {\\n  getAllAds {\\n    id\\n    title\\n    description\\n    price\\n    picture\\n    category {\\n      name\\n    }\\n    tags {\\n      name\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    query GetAd($id: Float!) {\\n  getAd(id: $id) {\\n    id\\n    title\\n    description\\n    price\\n    picture\\n    category {\\n      name\\n    }\\n    tags {\\n      name\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    mutation PublishAd($title: String!, $price: Float!, $category: String!) {\\n  publishAd(adData: {title: $title, price: $price, category: $category}) {\\n    id\\n  }\\n}\\n    \"\n    ]);\n    _templateObject2 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    query GetAllCategories {\\n  getAllCategories {\\n    id\\n    name\\n    ads {\\n      title\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject3 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    query Login($email: String!, $password: String!) {\\n  login(userData: {email: $email, password: $password})\\n}\\n    \"\n    ]);\n    _templateObject4 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n    mutation Register($email: String!, $password: String!) {\\n  register(userData: {email: $email, password: $password}) {\\n    id\\n  }\\n}\\n    \"\n    ]);\n    _templateObject5 = function() {\n        return data;\n    };\n    return data;\n}\n\n\nconst defaultOptions = {};\nconst GetAllAdsDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject());\n/**\n * __useGetAllAdsQuery__\n *\n * To run a query within a React component, call `useGetAllAdsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllAdsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllAdsQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllAdsQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllAdsDocument, options);\n}\nfunction useGetAllAdsLazyQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllAdsDocument, options);\n}\nfunction useGetAllAdsSuspenseQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSuspenseQuery(GetAllAdsDocument, options);\n}\nconst GetAdDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject1());\n/**\n * __useGetAdQuery__\n *\n * To run a query within a React component, call `useGetAdQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAdQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */ function useGetAdQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAdDocument, options);\n}\nfunction useGetAdLazyQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAdDocument, options);\n}\nfunction useGetAdSuspenseQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSuspenseQuery(GetAdDocument, options);\n}\nconst PublishAdDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject2());\n/**\n * __usePublishAdMutation__\n *\n * To run a mutation, you first call `usePublishAdMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `usePublishAdMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [publishAdMutation, { data, loading, error }] = usePublishAdMutation({\n *   variables: {\n *      title: // value for 'title'\n *      price: // value for 'price'\n *      category: // value for 'category'\n *   },\n * });\n */ function usePublishAdMutation(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(PublishAdDocument, options);\n}\nconst GetAllCategoriesDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject3());\n/**\n * __useGetAllCategoriesQuery__\n *\n * To run a query within a React component, call `useGetAllCategoriesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllCategoriesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllCategoriesQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllCategoriesQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllCategoriesDocument, options);\n}\nfunction useGetAllCategoriesLazyQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllCategoriesDocument, options);\n}\nfunction useGetAllCategoriesSuspenseQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSuspenseQuery(GetAllCategoriesDocument, options);\n}\nconst LoginDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject4());\n/**\n * __useLoginQuery__\n *\n * To run a query within a React component, call `useLoginQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoginQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoginQuery({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */ function useLoginQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(LoginDocument, options);\n}\nfunction useLoginLazyQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(LoginDocument, options);\n}\nfunction useLoginSuspenseQuery(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSuspenseQuery(LoginDocument, options);\n}\nconst RegisterDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject5());\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */ function useRegisterMutation(baseOptions) {\n    const options = {\n        ...defaultOptions,\n        ...baseOptions\n    };\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(RegisterDocument, options);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/generated/graphql-types.ts\n"));

/***/ })

});